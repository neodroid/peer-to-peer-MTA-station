{
  "version": 3,
  "sources": ["../../race-signal/src/index.ts"],
  "sourcesContent": ["/**\n * An abort error class that extends error\n */\nexport class AbortError extends Error {\n  public type: string\n  public code: string | string\n\n  constructor (message?: string, code?: string) {\n    super(message ?? 'The operation was aborted')\n    this.type = 'aborted'\n    this.name = 'AbortError'\n    this.code = code ?? 'ABORT_ERR'\n  }\n}\n\nexport interface RaceSignalOptions {\n  /**\n   * The message for the error thrown if the signal aborts\n   */\n  errorMessage?: string\n\n  /**\n   * The code for the error thrown if the signal aborts\n   */\n  errorCode?: string\n}\n\n/**\n * Race a promise against an abort signal\n */\nexport async function raceSignal <T> (promise: Promise<T>, signal?: AbortSignal, opts?: RaceSignalOptions): Promise<T> {\n  if (signal == null) {\n    return promise\n  }\n\n  if (signal.aborted) {\n    return Promise.reject(new AbortError(opts?.errorMessage, opts?.errorCode))\n  }\n\n  let listener\n\n  // create the error here so we have more context in the stack trace\n  const error = new AbortError(opts?.errorMessage, opts?.errorCode)\n\n  try {\n    return await Promise.race([\n      promise,\n      new Promise<T>((resolve, reject) => {\n        listener = () => {\n          reject(error)\n        }\n        signal.addEventListener('abort', listener)\n      })\n    ])\n  } finally {\n    if (listener != null) {\n      signal.removeEventListener('abort', listener)\n    }\n  }\n}\n"],
  "mappings": ";AAGM,IAAO,aAAP,cAA0B,MAAK;EAC5B;EACA;EAEP,YAAa,SAAkB,MAAa;AAC1C,UAAM,WAAW,2BAA2B;AAC5C,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,OAAO,QAAQ;EACtB;;AAkBF,eAAsB,WAAgB,SAAqB,QAAsB,MAAwB;AACvG,MAAI,UAAU,MAAM;AAClB,WAAO;;AAGT,MAAI,OAAO,SAAS;AAClB,WAAO,QAAQ,OAAO,IAAI,WAAW,MAAM,cAAc,MAAM,SAAS,CAAC;;AAG3E,MAAI;AAGJ,QAAM,QAAQ,IAAI,WAAW,MAAM,cAAc,MAAM,SAAS;AAEhE,MAAI;AACF,WAAO,MAAM,QAAQ,KAAK;MACxB;MACA,IAAI,QAAW,CAAC,SAAS,WAAU;AACjC,mBAAW,MAAK;AACd,iBAAO,KAAK;QACd;AACA,eAAO,iBAAiB,SAAS,QAAQ;MAC3C,CAAC;KACF;;AAED,QAAI,YAAY,MAAM;AACpB,aAAO,oBAAoB,SAAS,QAAQ;;;AAGlD;",
  "names": []
}
