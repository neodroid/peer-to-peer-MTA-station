{
  "version": 3,
  "sources": ["../../is-electron/index.js", "../../wherearewe/src/index.js"],
  "sourcesContent": ["// https://github.com/electron/electron/issues/2288\nfunction isElectron() {\n    // Renderer process\n    if (typeof window !== 'undefined' && typeof window.process === 'object' && window.process.type === 'renderer') {\n        return true;\n    }\n\n    // Main process\n    if (typeof process !== 'undefined' && typeof process.versions === 'object' && !!process.versions.electron) {\n        return true;\n    }\n\n    // Detect the user agent when the `nodeIntegration` option is set to false\n    if (typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Electron') >= 0) {\n        return true;\n    }\n\n    return false;\n}\n\nmodule.exports = isElectron;\n", "import detectElectron from 'is-electron'\n\nexport const isEnvWithDom = typeof window === 'object' && typeof document === 'object' && document.nodeType === 9\nexport const isElectron = detectElectron()\n\n/**\n * Detects browser main thread  **NOT** web worker or service worker\n */\nexport const isBrowser = isEnvWithDom && !isElectron\nexport const isElectronMain = isElectron && !isEnvWithDom\nexport const isElectronRenderer = isElectron && isEnvWithDom\nexport const isNode = typeof globalThis.process !== 'undefined' && typeof globalThis.process.release !== 'undefined' && globalThis.process.release.name === 'node' && !isElectron\n// @ts-ignore\n// eslint-disable-next-line no-undef\nexport const isWebWorker = typeof importScripts === 'function' && typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope\n\n// defeat bundlers replacing process.env.NODE_ENV with \"development\" or whatever\nexport const isTest = typeof globalThis.process !== 'undefined' && typeof globalThis.process.env !== 'undefined' && globalThis.process.env['NODE' + (() => '_')() + 'ENV'] === 'test'\nexport const isReactNative = typeof navigator !== 'undefined' && navigator.product === 'ReactNative'\n"],
  "mappings": ";;;;;;AAAA;AAAA;AACA,aAASA,cAAa;AAElB,UAAI,OAAO,WAAW,eAAe,OAAO,OAAO,YAAY,YAAY,OAAO,QAAQ,SAAS,YAAY;AAC3G,eAAO;AAAA,MACX;AAGA,UAAI,OAAO,YAAY,eAAe,OAAO,QAAQ,aAAa,YAAY,CAAC,CAAC,QAAQ,SAAS,UAAU;AACvG,eAAO;AAAA,MACX;AAGA,UAAI,OAAO,cAAc,YAAY,OAAO,UAAU,cAAc,YAAY,UAAU,UAAU,QAAQ,UAAU,KAAK,GAAG;AAC1H,eAAO;AAAA,MACX;AAEA,aAAO;AAAA,IACX;AAEA,WAAO,UAAUA;AAAA;AAAA;;;ACpBjB,yBAA2B;AAEpB,IAAM,eAAe,OAAO,WAAW,YAAY,OAAO,aAAa,YAAY,SAAS,aAAa;AACzG,IAAM,iBAAa,mBAAAC,SAAe;AAKlC,IAAM,YAAY,gBAAgB,CAAC;AACnC,IAAM,iBAAiB,cAAc,CAAC;AACtC,IAAM,qBAAqB,cAAc;AACzC,IAAM,SAAS,OAAO,WAAW,YAAY,eAAe,OAAO,WAAW,QAAQ,YAAY,eAAe,WAAW,QAAQ,QAAQ,SAAS,UAAU,CAAC;AAGhK,IAAM,cAAc,OAAO,kBAAkB,cAAc,OAAO,SAAS,eAAe,OAAO,sBAAsB,eAAe,gBAAgB;AAGtJ,IAAM,SAAS,OAAO,WAAW,YAAY,eAAe,OAAO,WAAW,QAAQ,QAAQ,eAAe,WAAW,QAAQ,IAAI,SAAU,uBAAM,KAAK,IAAI,KAAK,MAAM;AACxK,IAAM,gBAAgB,OAAO,cAAc,eAAe,UAAU,YAAY;",
  "names": ["isElectron", "detectElectron"]
}
