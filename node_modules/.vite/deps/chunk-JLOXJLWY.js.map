{
  "version": 3,
  "sources": ["../../uint8-varint/src/index.ts"],
  "sourcesContent": ["/* eslint-disable no-fallthrough */\nimport { allocUnsafe } from 'uint8arrays/alloc'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nconst N1 = Math.pow(2, 7)\nconst N2 = Math.pow(2, 14)\nconst N3 = Math.pow(2, 21)\nconst N4 = Math.pow(2, 28)\nconst N5 = Math.pow(2, 35)\nconst N6 = Math.pow(2, 42)\nconst N7 = Math.pow(2, 49)\n\n/** Most significant bit of a byte */\nconst MSB = 0x80\n/** Rest of the bits in a byte */\nconst REST = 0x7f\n\nexport function encodingLength (value: number): number {\n  if (value < N1) {\n    return 1\n  }\n\n  if (value < N2) {\n    return 2\n  }\n\n  if (value < N3) {\n    return 3\n  }\n\n  if (value < N4) {\n    return 4\n  }\n\n  if (value < N5) {\n    return 5\n  }\n\n  if (value < N6) {\n    return 6\n  }\n\n  if (value < N7) {\n    return 7\n  }\n\n  if (Number.MAX_SAFE_INTEGER != null && value > Number.MAX_SAFE_INTEGER) {\n    throw new RangeError('Could not encode varint')\n  }\n\n  return 8\n}\n\nexport function encodeUint8Array (value: number, buf: Uint8Array, offset: number = 0): Uint8Array {\n  switch (encodingLength(value)) {\n    case 8: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value /= 128\n    }\n    case 7: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value /= 128\n    }\n    case 6: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value /= 128\n    }\n    case 5: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value /= 128\n    }\n    case 4: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value >>>= 7\n    }\n    case 3: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value >>>= 7\n    }\n    case 2: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value >>>= 7\n    }\n    case 1: {\n      buf[offset++] = (value & 0xFF)\n      value >>>= 7\n      break\n    }\n    default: throw new Error('unreachable')\n  }\n  return buf\n}\n\nexport function encodeUint8ArrayList (value: number, buf: Uint8ArrayList, offset: number = 0): Uint8ArrayList {\n  switch (encodingLength(value)) {\n    case 8: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value /= 128\n    }\n    case 7: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value /= 128\n    }\n    case 6: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value /= 128\n    }\n    case 5: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value /= 128\n    }\n    case 4: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value >>>= 7\n    }\n    case 3: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value >>>= 7\n    }\n    case 2: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value >>>= 7\n    }\n    case 1: {\n      buf.set(offset++, (value & 0xFF))\n      value >>>= 7\n      break\n    }\n    default: throw new Error('unreachable')\n  }\n  return buf\n}\n\nexport function decodeUint8Array (buf: Uint8Array, offset: number): number {\n  let b = buf[offset]\n  let res = 0\n\n  res += b & REST\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 1]\n  res += (b & REST) << 7\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 2]\n  res += (b & REST) << 14\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 3]\n  res += (b & REST) << 21\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 4]\n  res += (b & REST) * N4\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 5]\n  res += (b & REST) * N5\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 6]\n  res += (b & REST) * N6\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 7]\n  res += (b & REST) * N7\n  if (b < MSB) {\n    return res\n  }\n\n  throw new RangeError('Could not decode varint')\n}\n\nexport function decodeUint8ArrayList (buf: Uint8ArrayList, offset: number): number {\n  let b = buf.get(offset)\n  let res = 0\n\n  res += b & REST\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 1)\n  res += (b & REST) << 7\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 2)\n  res += (b & REST) << 14\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 3)\n  res += (b & REST) << 21\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 4)\n  res += (b & REST) * N4\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 5)\n  res += (b & REST) * N5\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 6)\n  res += (b & REST) * N6\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 7)\n  res += (b & REST) * N7\n  if (b < MSB) {\n    return res\n  }\n\n  throw new RangeError('Could not decode varint')\n}\n\nexport function encode (value: number): Uint8Array\nexport function encode (value: number, buf: Uint8Array, offset?: number): Uint8Array\nexport function encode (value: number, buf: Uint8ArrayList, offset?: number): Uint8ArrayList\nexport function encode <T extends Uint8Array | Uint8ArrayList = Uint8Array> (value: number, buf?: T, offset: number = 0): T {\n  if (buf == null) {\n    buf = allocUnsafe(encodingLength(value)) as T\n  }\n  if (buf instanceof Uint8Array) {\n    return encodeUint8Array(value, buf, offset) as T\n  } else {\n    return encodeUint8ArrayList(value, buf, offset) as T\n  }\n}\n\nexport function decode (buf: Uint8ArrayList | Uint8Array, offset: number = 0): number {\n  if (buf instanceof Uint8Array) {\n    return decodeUint8Array(buf, offset)\n  } else {\n    return decodeUint8ArrayList(buf, offset)\n  }\n}\n"],
  "mappings": ";;;;;AAIA,IAAM,KAAK,KAAK,IAAI,GAAG,CAAC;AACxB,IAAM,KAAK,KAAK,IAAI,GAAG,EAAE;AACzB,IAAM,KAAK,KAAK,IAAI,GAAG,EAAE;AACzB,IAAM,KAAK,KAAK,IAAI,GAAG,EAAE;AACzB,IAAM,KAAK,KAAK,IAAI,GAAG,EAAE;AACzB,IAAM,KAAK,KAAK,IAAI,GAAG,EAAE;AACzB,IAAM,KAAK,KAAK,IAAI,GAAG,EAAE;AAGzB,IAAM,MAAM;AAEZ,IAAM,OAAO;AAEP,SAAU,eAAgB,OAAa;AAC3C,MAAI,QAAQ,IAAI;AACd,WAAO;EACT;AAEA,MAAI,QAAQ,IAAI;AACd,WAAO;EACT;AAEA,MAAI,QAAQ,IAAI;AACd,WAAO;EACT;AAEA,MAAI,QAAQ,IAAI;AACd,WAAO;EACT;AAEA,MAAI,QAAQ,IAAI;AACd,WAAO;EACT;AAEA,MAAI,QAAQ,IAAI;AACd,WAAO;EACT;AAEA,MAAI,QAAQ,IAAI;AACd,WAAO;EACT;AAEA,MAAI,OAAO,oBAAoB,QAAQ,QAAQ,OAAO,kBAAkB;AACtE,UAAM,IAAI,WAAW,yBAAyB;EAChD;AAEA,SAAO;AACT;AAEM,SAAU,iBAAkB,OAAe,KAAiB,SAAiB,GAAC;AAClF,UAAQ,eAAe,KAAK,GAAG;IAC7B,KAAK,GAAG;AACN,UAAI,QAAQ,IAAK,QAAQ,MAAQ;AACjC,eAAS;IACX;IACA,KAAK,GAAG;AACN,UAAI,QAAQ,IAAK,QAAQ,MAAQ;AACjC,eAAS;IACX;IACA,KAAK,GAAG;AACN,UAAI,QAAQ,IAAK,QAAQ,MAAQ;AACjC,eAAS;IACX;IACA,KAAK,GAAG;AACN,UAAI,QAAQ,IAAK,QAAQ,MAAQ;AACjC,eAAS;IACX;IACA,KAAK,GAAG;AACN,UAAI,QAAQ,IAAK,QAAQ,MAAQ;AACjC,iBAAW;IACb;IACA,KAAK,GAAG;AACN,UAAI,QAAQ,IAAK,QAAQ,MAAQ;AACjC,iBAAW;IACb;IACA,KAAK,GAAG;AACN,UAAI,QAAQ,IAAK,QAAQ,MAAQ;AACjC,iBAAW;IACb;IACA,KAAK,GAAG;AACN,UAAI,QAAQ,IAAK,QAAQ;AACzB,iBAAW;AACX;IACF;IACA;AAAS,YAAM,IAAI,MAAM,aAAa;EACxC;AACA,SAAO;AACT;AAEM,SAAU,qBAAsB,OAAe,KAAqB,SAAiB,GAAC;AAC1F,UAAQ,eAAe,KAAK,GAAG;IAC7B,KAAK,GAAG;AACN,UAAI,IAAI,UAAW,QAAQ,MAAQ,GAAG;AACtC,eAAS;IACX;IACA,KAAK,GAAG;AACN,UAAI,IAAI,UAAW,QAAQ,MAAQ,GAAG;AACtC,eAAS;IACX;IACA,KAAK,GAAG;AACN,UAAI,IAAI,UAAW,QAAQ,MAAQ,GAAG;AACtC,eAAS;IACX;IACA,KAAK,GAAG;AACN,UAAI,IAAI,UAAW,QAAQ,MAAQ,GAAG;AACtC,eAAS;IACX;IACA,KAAK,GAAG;AACN,UAAI,IAAI,UAAW,QAAQ,MAAQ,GAAG;AACtC,iBAAW;IACb;IACA,KAAK,GAAG;AACN,UAAI,IAAI,UAAW,QAAQ,MAAQ,GAAG;AACtC,iBAAW;IACb;IACA,KAAK,GAAG;AACN,UAAI,IAAI,UAAW,QAAQ,MAAQ,GAAG;AACtC,iBAAW;IACb;IACA,KAAK,GAAG;AACN,UAAI,IAAI,UAAW,QAAQ,GAAK;AAChC,iBAAW;AACX;IACF;IACA;AAAS,YAAM,IAAI,MAAM,aAAa;EACxC;AACA,SAAO;AACT;AAEM,SAAU,iBAAkB,KAAiB,QAAc;AAC/D,MAAI,IAAI,IAAI,MAAM;AAClB,MAAI,MAAM;AAEV,SAAO,IAAI;AACX,MAAI,IAAI,KAAK;AACX,WAAO;EACT;AAEA,MAAI,IAAI,SAAS,CAAC;AAClB,UAAQ,IAAI,SAAS;AACrB,MAAI,IAAI,KAAK;AACX,WAAO;EACT;AAEA,MAAI,IAAI,SAAS,CAAC;AAClB,UAAQ,IAAI,SAAS;AACrB,MAAI,IAAI,KAAK;AACX,WAAO;EACT;AAEA,MAAI,IAAI,SAAS,CAAC;AAClB,UAAQ,IAAI,SAAS;AACrB,MAAI,IAAI,KAAK;AACX,WAAO;EACT;AAEA,MAAI,IAAI,SAAS,CAAC;AAClB,UAAQ,IAAI,QAAQ;AACpB,MAAI,IAAI,KAAK;AACX,WAAO;EACT;AAEA,MAAI,IAAI,SAAS,CAAC;AAClB,UAAQ,IAAI,QAAQ;AACpB,MAAI,IAAI,KAAK;AACX,WAAO;EACT;AAEA,MAAI,IAAI,SAAS,CAAC;AAClB,UAAQ,IAAI,QAAQ;AACpB,MAAI,IAAI,KAAK;AACX,WAAO;EACT;AAEA,MAAI,IAAI,SAAS,CAAC;AAClB,UAAQ,IAAI,QAAQ;AACpB,MAAI,IAAI,KAAK;AACX,WAAO;EACT;AAEA,QAAM,IAAI,WAAW,yBAAyB;AAChD;AAEM,SAAU,qBAAsB,KAAqB,QAAc;AACvE,MAAI,IAAI,IAAI,IAAI,MAAM;AACtB,MAAI,MAAM;AAEV,SAAO,IAAI;AACX,MAAI,IAAI,KAAK;AACX,WAAO;EACT;AAEA,MAAI,IAAI,IAAI,SAAS,CAAC;AACtB,UAAQ,IAAI,SAAS;AACrB,MAAI,IAAI,KAAK;AACX,WAAO;EACT;AAEA,MAAI,IAAI,IAAI,SAAS,CAAC;AACtB,UAAQ,IAAI,SAAS;AACrB,MAAI,IAAI,KAAK;AACX,WAAO;EACT;AAEA,MAAI,IAAI,IAAI,SAAS,CAAC;AACtB,UAAQ,IAAI,SAAS;AACrB,MAAI,IAAI,KAAK;AACX,WAAO;EACT;AAEA,MAAI,IAAI,IAAI,SAAS,CAAC;AACtB,UAAQ,IAAI,QAAQ;AACpB,MAAI,IAAI,KAAK;AACX,WAAO;EACT;AAEA,MAAI,IAAI,IAAI,SAAS,CAAC;AACtB,UAAQ,IAAI,QAAQ;AACpB,MAAI,IAAI,KAAK;AACX,WAAO;EACT;AAEA,MAAI,IAAI,IAAI,SAAS,CAAC;AACtB,UAAQ,IAAI,QAAQ;AACpB,MAAI,IAAI,KAAK;AACX,WAAO;EACT;AAEA,MAAI,IAAI,IAAI,SAAS,CAAC;AACtB,UAAQ,IAAI,QAAQ;AACpB,MAAI,IAAI,KAAK;AACX,WAAO;EACT;AAEA,QAAM,IAAI,WAAW,yBAAyB;AAChD;AAKM,SAAU,OAA6D,OAAe,KAAS,SAAiB,GAAC;AACrH,MAAI,OAAO,MAAM;AACf,UAAM,YAAY,eAAe,KAAK,CAAC;EACzC;AACA,MAAI,eAAe,YAAY;AAC7B,WAAO,iBAAiB,OAAO,KAAK,MAAM;EAC5C,OAAO;AACL,WAAO,qBAAqB,OAAO,KAAK,MAAM;EAChD;AACF;AAEM,SAAU,OAAQ,KAAkC,SAAiB,GAAC;AAC1E,MAAI,eAAe,YAAY;AAC7B,WAAO,iBAAiB,KAAK,MAAM;EACrC,OAAO;AACL,WAAO,qBAAqB,KAAK,MAAM;EACzC;AACF;",
  "names": []
}
